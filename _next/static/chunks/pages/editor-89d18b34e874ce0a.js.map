{"version":3,"file":"static/chunks/pages/editor-89d18b34e874ce0a.js","mappings":"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","sources":["webpack://_N_E/?fb4d","webpack://_N_E/./src/components/ErrorContainer/index.tsx","webpack://_N_E/./src/components/MonacoEditor/index.tsx","webpack://_N_E/./src/containers/Editor/JsonEditor/index.tsx","webpack://_N_E/./src/containers/Editor/Panes.tsx","webpack://_N_E/./src/pages/editor.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/editor\",\n      function () {\n        return require(\"private-next-pages/editor.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/editor\"])\n      });\n    }\n  ","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdReportGmailerrorred, MdOutlineCheckCircleOutline } from \"react-icons/md\";\nimport useJson from \"src/store/useJson\";\n\nconst StyledErrorWrapper = styled.div`\n  z-index: 1;\n`;\n\nconst StyledErrorExpand = styled.div<{ error: boolean }>`\n  position: relative;\n  display: flex;\n  width: 100%;\n  padding: 4px 16px;\n  height: 36px;\n  border-radius: 0;\n  justify-content: space-between;\n  align-items: center;\n  color: ${({ theme, error }) => (error ? theme.TEXT_DANGER : theme.TEXT_POSITIVE)};\n  pointer-events: ${({ error }) => !error && \"none\"};\n  background: ${({ theme }) => theme.BACKGROUND_SECONDARY};\n`;\n\nconst StyledTitle = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 500;\n  gap: 10px;\n  font-size: 16px;\n`;\n\nconst StyledError = styled.pre`\n  color: ${({ theme }) => theme.TEXT_DANGER};\n  border-bottom: 1px solid ${({ theme }) => theme.SILVER_DARK};\n  font-size: 12px;\n  padding: 12px;\n  margin: 0;\n  word-wrap: break-word;\n  white-space: pre-line;\n`;\n\nexport const ErrorContainer = () => {\n  const hasError = useJson(state => state.hasError);\n\n  return (\n    <StyledErrorWrapper>\n      <StyledErrorExpand error={hasError}>\n        <StyledTitle>\n          {hasError ? (\n            <MdReportGmailerrorred size={20} />\n          ) : (\n            <MdOutlineCheckCircleOutline size={20} />\n          )}\n          {hasError ? \"Invalid JSON\" : \"JSON Valid\"}\n        </StyledTitle>\n      </StyledErrorExpand>\n    </StyledErrorWrapper>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Editor, { loader, Monaco } from \"@monaco-editor/react\";\nimport debounce from \"lodash.debounce\";\nimport useJson from \"src/store/useJson\";\nimport useStored from \"src/store/useStored\";\n\nloader.config({\n  paths: {\n    vs: \"https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.34.0/min/vs\",\n  },\n});\n\nconst editorOptions = {\n  formatOnPaste: true,\n  minimap: {\n    enabled: false,\n  },\n};\n\nconst StyledWrapper = styled.div`\n  display: grid;\n  height: calc(100vh - 36px);\n  grid-template-columns: 100%;\n  grid-template-rows: minmax(0, 1fr);\n`;\n\nexport const MonacoEditor = () => {\n  const json = useJson(state => state.json);\n  const setJson = useJson(state => state.setJson);\n  const setError = useJson(state => state.setError);\n  const [loaded, setLoaded] = React.useState(false);\n  const [value, setValue] = React.useState<string | undefined>(json);\n\n  const hasError = useJson(state => state.hasError);\n  const getHasChanges = useJson(state => state.getHasChanges);\n  const lightmode = useStored(state => (state.lightmode ? \"light\" : \"vs-dark\"));\n\n  const handleEditorWillMount = React.useCallback(\n    (monaco: Monaco) => {\n      monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n        allowComments: true,\n        comments: \"ignore\",\n      });\n\n      monaco.editor.onDidChangeMarkers(([uri]) => {\n        const markers = monaco.editor.getModelMarkers({ resource: uri });\n        setError(!!markers.length);\n      });\n    },\n    [setError]\n  );\n\n  const debouncedSetJson = React.useMemo(\n    () =>\n      debounce(value => {\n        if (hasError) return;\n        setJson(value || \"[]\");\n      }, 1200),\n    [hasError, setJson]\n  );\n\n  React.useEffect(() => {\n    if ((value || !hasError) && loaded) debouncedSetJson(value);\n    setLoaded(true);\n\n    return () => debouncedSetJson.cancel();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSetJson, hasError, value]);\n\n  const handleChange = React.useCallback((value?: string) => {\n    try {\n      const parsedJson = JSON.stringify(JSON.parse(value!), null, 2);\n      setValue(parsedJson);\n    } catch (error) {\n      setValue(value);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const beforeunload = (e: BeforeUnloadEvent) => {\n      if (getHasChanges()) {\n        const confirmationMessage =\n          \"Unsaved changes, if you leave before saving  your changes will be lost\";\n\n        (e || window.event).returnValue = confirmationMessage; //Gecko + IE\n        return confirmationMessage;\n      }\n    };\n\n    window.addEventListener(\"beforeunload\", beforeunload);\n\n    return () => {\n      window.removeEventListener(\"beforeunload\", beforeunload);\n    };\n  }, [getHasChanges]);\n\n  return (\n    <StyledWrapper>\n      <Editor\n        value={json}\n        theme={lightmode}\n        options={editorOptions}\n        onChange={handleChange}\n        beforeMount={handleEditorWillMount}\n        defaultLanguage=\"json\"\n        height=\"100%\"\n      />\n    </StyledWrapper>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ErrorContainer } from \"src/components/ErrorContainer\";\nimport { MonacoEditor } from \"src/components/MonacoEditor\";\n\nconst StyledEditorWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  user-select: none;\n`;\n\nexport const JsonEditor: React.FC = () => {\n  return (\n    <StyledEditorWrapper>\n      <ErrorContainer />\n      <MonacoEditor />\n    </StyledEditorWrapper>\n  );\n};\n","import React from \"react\";\nimport dynamic from \"next/dynamic\";\nimport styled from \"styled-components\";\nimport { Allotment } from \"allotment\";\nimport \"allotment/dist/style.css\";\nimport { JsonEditor } from \"src/containers/Editor/JsonEditor\";\nimport useGraph from \"src/store/useGraph\";\n\nexport const StyledEditor = styled(Allotment)`\n  position: relative !important;\n  display: flex;\n  background: ${({ theme }) => theme.BACKGROUND_SECONDARY};\n`;\n\nconst LiveEditor = dynamic(() => import(\"src/containers/Editor/LiveEditor\"), {\n  ssr: false,\n});\n\nconst Panes: React.FC = () => {\n  const fullscreen = useGraph(state => state.fullscreen);\n  const toggleFullscreen = useGraph(state => state.toggleFullscreen);\n  const isMobile = React.useMemo(() => window.innerWidth <= 768, []);\n\n  React.useEffect(() => {\n    if (isMobile) toggleFullscreen(true);\n  }, [isMobile, toggleFullscreen]);\n\n  return (\n    <StyledEditor proportionalLayout={false} vertical={isMobile}>\n      <Allotment.Pane\n        preferredSize={isMobile ? \"100%\" : 400}\n        minSize={fullscreen ? 0 : 300}\n        maxSize={isMobile ? Infinity : 800}\n        visible={!fullscreen}\n      >\n        <JsonEditor />\n      </Allotment.Pane>\n      <Allotment.Pane minSize={0} maxSize={isMobile && !fullscreen ? 0 : Infinity}>\n        <LiveEditor />\n      </Allotment.Pane>\n    </StyledEditor>\n  );\n};\n\nexport default Panes;\n","import React from \"react\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport Panes from \"src/containers/Editor/Panes\";\nimport useJson from \"src/store/useJson\";\n\nexport const StyledPageWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: calc(100vh);\n  width: 100%;\n\n  @media only screen and (max-width: 768px) {\n    position: fixed;\n    height: -webkit-fill-available;\n    flex-direction: column;\n  }\n`;\n\nexport const StyledEditorWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst EditorPage: React.FC = () => {\n  const { isReady, query } = useRouter();\n  const fetchJson = useJson(state => state.fetchJson);\n\n  React.useEffect(() => {\n    // Fetch JSON by query\n    // Check Session User\n    if (isReady) {\n      fetchJson(query.json);\n    }\n  }, [fetchJson, isReady, query.json]);\n\n  return (\n    <StyledEditorWrapper>\n      <Head>\n        <title>Editor | JSON Crack</title>\n        <meta name=\"description\" content=\"View your JSON data in graphs instantly.\" />\n      </Head>\n      <StyledPageWrapper>\n        <StyledEditorWrapper>\n          <Panes />\n        </StyledEditorWrapper>\n      </StyledPageWrapper>\n    </StyledEditorWrapper>\n  );\n};\n\nexport default EditorPage;\n"],"names":["window","__NEXT_P","push","__webpack_require__","StyledErrorWrapper","styled","StyledErrorExpand","error","theme","param","TEXT_DANGER","TEXT_POSITIVE","BACKGROUND_SECONDARY","StyledTitle","SILVER_DARK","ErrorContainer","hasError","useJson","state","jsx_runtime","jsx","jsxs","MdReportGmailerrorred","size","MdOutlineCheckCircleOutline","loader","paths","vs","editorOptions","formatOnPaste","minimap","enabled","StyledWrapper","MonacoEditor","json","setJson","setError","loaded","setLoaded","React","value","setValue","getHasChanges","lightmode","useStored","handleEditorWillMount","monaco","languages","jsonDefaults","setDiagnosticsOptions","allowComments","comments","editor","onDidChangeMarkers","uri","markers","getModelMarkers","resource","length","debouncedSetJson","debounce","cancel","handleChange","parsedJson","JSON","stringify","parse","beforeunload","confirmationMessage","e","event","returnValue","addEventListener","removeEventListener","Editor","options","onChange","beforeMount","defaultLanguage","height","StyledEditorWrapper","JsonEditor","StyledEditor","Allotment","LiveEditor","dynamic","Promise","all","then","bind","ssr","Panes","fullscreen","useGraph","toggleFullscreen","isMobile","innerWidth","proportionalLayout","vertical","preferredSize","minSize","maxSize","Infinity","visible","StyledPageWrapper","EditorPage","isReady","query","useRouter","fetchJson","Head","title","meta","name","content"],"sourceRoot":""}